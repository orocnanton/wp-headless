---
// Componente reutilizable para carga dinámica de posts
const { 
  initialPosts = [],
  category = null, 
  perPage = 9 
} = Astro.props;
---

<div id="dynamic-posts-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
  {initialPosts.map((post) => (
    <div class="post-card group bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all border border-gray-100">
      <div class="relative h-56 overflow-hidden">
        {post._embedded?.['wp:featuredmedia']?.[0] ? (
          <img 
            src={post._embedded['wp:featuredmedia'][0].source_url}
            alt={post.title.rendered}
            class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
          />
        ) : (
          <div class="w-full h-full bg-gradient-to-tr from-primary-50 to-primary-100 flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
        )}
        <div class="absolute top-4 left-4 flex flex-wrap gap-2">
          {post._embedded?.['wp:term']?.[0]?.map((cat) => (
            <span class="bg-dark-500/70 backdrop-blur-md text-white text-xs px-3 py-1 font-sans uppercase tracking-wider">
              {cat.name}
            </span>
          ))}
        </div>
      </div>
      
      <div class="p-6">
        <h2 class="text-xl font-bold mb-3 text-gray-900 group-hover:text-primary-700 transition-colors">{post.title.rendered}</h2>
        <div class="text-gray-600 mb-4 line-clamp-2" set:html={post.excerpt.rendered}></div>
        
        <div class="flex items-center justify-between pt-4 border-t border-gray-100">
          <span class="text-sm text-gray-500">
            {new Date(post.date).toLocaleDateString('es-ES', { 
              day: 'numeric', 
              month: 'long'
            })}
          </span>
          <a href={`/post/${post.slug}`} class="inline-flex items-center text-primary-700 hover:text-primary-800 font-medium">
            Leer más
            <svg xmlns="http://www.w3.org/2000/svg" class="ml-1 h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>
      </div>
    </div>
  ))}
</div>

<div class="mt-12 flex justify-center">
  <div class="flex items-center gap-2">
    <button id="load-prev" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
      &larr; Anterior
    </button>
    <span id="current-page" class="px-4 py-2 bg-primary-100 text-primary-800 rounded-md">
      Página 1
    </span>
    <button id="load-next" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-gray-800 transition-colors">
      Siguiente &rarr;
    </button>
  </div>
</div>

<div id="loading-indicator" class="hidden mt-8 text-center">
  <div class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-primary-200 border-t-primary-600"></div>
  <p class="mt-2 text-gray-600">Cargando...</p>
</div>

<script define:vars={{ initialPerPage: perPage, categoryId: category }}>
  // ...Código similar al de blog.astro pero reutilizable para cualquier página...
  // Variables para la paginación
  let currentPage = 1;
  let totalPages = 1;
  let isLoading = false;
  let perPage = initialPerPage;
  
  // Elementos DOM
  const postsContainer = document.getElementById('dynamic-posts-container');
  const loadPrevBtn = document.getElementById('load-prev');
  const loadNextBtn = document.getElementById('load-next');
  const currentPageIndicator = document.getElementById('current-page');
  const loadingIndicator = document.getElementById('loading-indicator');
  
  // URL base de la API de WP
  const apiUrl = 'https://tu-wordpress.com/wp-json/wp/v2'; // Reemplaza con tu URL de WordPress
  
  // Deshabilitar el botón de anterior en la primera página
  loadPrevBtn.disabled = true;
  
  // Función para cargar posts con filtro opcional de categoría
  async function loadPosts(page) {
    // ... implementación similar a blog.astro ...
    // con la opción de filtrar por categoryId si está definido
  }
  
  // Event listeners y configuración inicial
  // ... similar a blog.astro
</script>
