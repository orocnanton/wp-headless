---
import Layout from '../layouts/Layout.astro';
import { getPosts } from '../lib/api';

// Obtener los primeros 9 posts para la carga inicial
const initialPosts = await getPosts(1, 9);
---

<Layout title="Blog - Oraciones Cristianas">
  <section class="mb-12">
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Nuestro Blog</h1>
      <p class="text-xl text-gray-600">Artículos y reflexiones sobre fe y oraciones</p>
    </div>
  </section>

  <!-- Contenedor donde se mostrarán los posts -->
  <div id="posts-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {initialPosts.map((post) => (
      <div class="post-card group bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all border border-gray-100">
        <div class="relative h-56 overflow-hidden">
          {post._embedded?.['wp:featuredmedia']?.[0] ? (
            <img 
              src={post._embedded['wp:featuredmedia'][0].source_url}
              alt={post.title.rendered}
              class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
            />
          ) : (
            <div class="w-full h-full bg-gradient-to-tr from-primary-50 to-primary-100 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
            </div>
          )}
          <div class="absolute top-4 left-4 flex flex-wrap gap-2">
            {post._embedded?.['wp:term']?.[0]?.map((category) => (
              <span class="bg-dark-500/70 backdrop-blur-md text-white text-xs px-3 py-1 font-sans uppercase tracking-wider">
                {category.name}
              </span>
            ))}
          </div>
        </div>
        
        <div class="p-6">
          <h2 class="text-xl font-bold mb-3 text-gray-900 group-hover:text-primary-700 transition-colors">{post.title.rendered}</h2>
          <div class="text-gray-600 mb-4 line-clamp-2" set:html={post.excerpt.rendered}></div>
          
          <div class="flex items-center justify-between pt-4 border-t border-gray-100">
            <span class="text-sm text-gray-500">
              {new Date(post.date).toLocaleDateString('es-ES', { 
                day: 'numeric', 
                month: 'long'
              })}
            </span>
            <a href={`/post/${post.slug}`} class="inline-flex items-center text-primary-700 hover:text-primary-800 font-medium">
              Leer más
              <svg xmlns="http://www.w3.org/2000/svg" class="ml-1 h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>
  
  <!-- Control de paginación dinámica -->
  <div class="mt-12 flex justify-center">
    <div class="flex items-center gap-2">
      <button id="load-prev" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
        &larr; Anterior
      </button>
      <span id="current-page" class="px-4 py-2 bg-primary-100 text-primary-800 rounded-md">
        Página 1
      </span>
      <button id="load-next" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-gray-800 transition-colors">
        Siguiente &rarr;
      </button>
    </div>
  </div>
  
  <!-- Indicador de carga -->
  <div id="loading-indicator" class="hidden mt-8 text-center">
    <div class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-primary-200 border-t-primary-600"></div>
    <p class="mt-2 text-gray-600">Cargando...</p>
  </div>
</Layout>

<script>
  // Variables para la paginación
  let currentPage = 1;
  let totalPages = 1;
  let isLoading = false;
  
  // Elementos DOM
  const postsContainer = document.getElementById('posts-container');
  const loadPrevBtn = document.getElementById('load-prev');
  const loadNextBtn = document.getElementById('load-next');
  const currentPageIndicator = document.getElementById('current-page');
  const loadingIndicator = document.getElementById('loading-indicator');
  
  // URL base de la API de WP
  const apiUrl = 'https://tu-wordpress.com/wp-json/wp/v2'; // Reemplaza con tu URL de WordPress
  
  // Deshabilitar el botón de anterior en la primera página
  loadPrevBtn.disabled = true;
  
  // Función para cargar posts
  async function loadPosts(page) {
    if (isLoading) return;
    
    isLoading = true;
    showLoading(true);
    
    try {
      const response = await fetch(`${apiUrl}/posts?_embed=true&per_page=9&page=${page}`);
      
      // Obtener el número total de páginas del header
      totalPages = parseInt(response.headers.get('X-WP-TotalPages') || '1');
      
      if (response.ok) {
        const posts = await response.json();
        renderPosts(posts);
        updatePaginationControls();
      } else {
        console.error('Error al cargar los posts:', response.status);
      }
    } catch (error) {
      console.error('Error en la petición:', error);
    } finally {
      isLoading = false;
      showLoading(false);
    }
  }
  
  // Función para renderizar posts
  function renderPosts(posts) {
    // Limpiar el contenedor
    postsContainer.innerHTML = '';
    
    // Crear y añadir cada post
    posts.forEach(post => {
      const postCard = document.createElement('div');
      postCard.className = 'post-card group bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all border border-gray-100';
      
      let featuredImage = '';
      if (post._embedded?.['wp:featuredmedia']?.[0]) {
        featuredImage = `<img 
          src="${post._embedded['wp:featuredmedia'][0].source_url}"
          alt="${post.title.rendered}"
          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
        />`;
      } else {
        featuredImage = `<div class="w-full h-full bg-gradient-to-tr from-primary-50 to-primary-100 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
        </div>`;
      }
      
      let categories = '';
      if (post._embedded?.['wp:term']?.[0]) {
        const categoryElements = post._embedded['wp:term'][0].map(category => 
          `<span class="bg-dark-500/70 backdrop-blur-md text-white text-xs px-3 py-1 font-sans uppercase tracking-wider">
            ${category.name}
          </span>`
        ).join('');
        categories = `<div class="absolute top-4 left-4 flex flex-wrap gap-2">${categoryElements}</div>`;
      }
      
      const formattedDate = new Date(post.date).toLocaleDateString('es-ES', { 
        day: 'numeric', 
        month: 'long'
      });
      
      postCard.innerHTML = `
        <div class="relative h-56 overflow-hidden">
          ${featuredImage}
          ${categories}
        </div>
        
        <div class="p-6">
          <h2 class="text-xl font-bold mb-3 text-gray-900 group-hover:text-primary-700 transition-colors">${post.title.rendered}</h2>
          <div class="text-gray-600 mb-4 line-clamp-2">${post.excerpt.rendered}</div>
          
          <div class="flex items-center justify-between pt-4 border-t border-gray-100">
            <span class="text-sm text-gray-500">
              ${formattedDate}
            </span>
            <a href="/post/${post.slug}" class="inline-flex items-center text-primary-700 hover:text-primary-800 font-medium">
              Leer más
              <svg xmlns="http://www.w3.org/2000/svg" class="ml-1 h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </a>
          </div>
        </div>
      `;
      
      postsContainer.appendChild(postCard);
    });
  }
  
  // Controles de paginación
  function updatePaginationControls() {
    loadPrevBtn.disabled = currentPage <= 1;
    loadNextBtn.disabled = currentPage >= totalPages;
    currentPageIndicator.textContent = `Página ${currentPage} de ${totalPages}`;
  }
  
  // Mostrar/ocultar indicador de carga
  function showLoading(show) {
    if (show) {
      loadingIndicator.classList.remove('hidden');
    } else {
      loadingIndicator.classList.add('hidden');
    }
  }
  
  // Event listeners para botones de paginación
  loadPrevBtn.addEventListener('click', () => {
    if (currentPage > 1) {
      currentPage--;
      loadPosts(currentPage);
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
  });
  
  loadNextBtn.addEventListener('click', () => {
    if (currentPage < totalPages) {
      currentPage++;
      loadPosts(currentPage);
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
  });
  
  // Inicializar carga de datos 
  document.addEventListener('DOMContentLoaded', async () => {
    // Cargar la primera página
    currentPage = 1;
    await loadPosts(currentPage);
  });
</script>
